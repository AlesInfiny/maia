name: coverage-to-markdown
description: Vitest の テストカバレッジファイル coverage-summary.json を jq で加工し、Markdown 形式の表に整形します。

inputs:
  coverage_json:
    description: "入力となる coverage-summary.json のパス"
    required: true
  output_md:
    description: "整形した Markdown を出力するファイルパス"
    required: false
    default: "/var/tmp/coverage-summary.md"

outputs:
  markdown_path:
    description: "生成された Markdown ファイルのパス"
    value: ${{ steps.set-outputs.outputs.markdown_path }}

runs:
  using: "composite"
  steps:
    - id: coverage-to-md-by-jq
      name: jq で Markdown を生成
      shell: bash
      run: |
        set -euo pipefail

        COV_JSON="./coverage-summary.json"
        OUT_MD="./output.md"

        mkdir -p "$(dirname "$OUT_MD")"

        {
          echo "## サマリー"
          echo
          echo "| 項目 | Covered/Total | % |"
          echo "|---|---:|---:|"
          jq -r '
            .total as $t
            | ["lines","branches","functions","statements"]
            | map(select($t[.] != null))
            | .[]
            | "| \(.) | \($t[.].covered)/\($t[.].total) | \(($t[.].pct // 0))% |"
          ' "$COV_JSON"

          echo
          echo "## ファイルごとの詳細"
          echo
          echo "| ファイル | Lines (c/t, %) | Branches (c/t, %) | Functions (c/t, %) | Statements (c/t, %) |"
          echo "|---|---:|---:|---:|---:|"
          jq -r '
            to_entries
            | map(select(.key != "total"))
            | sort_by(.key)
            | .[]
            | .key as $file
            | .value as $v
            | "| \($file | gsub("\\|"; "\\\\|"))"
              + " | \($v.lines.covered)/\($v.lines.total), \(($v.lines.pct // 0))%"
              + " | \($v.branches.covered)/\($v.branches.total), \(($v.branches.pct // 0))%"
              + " | \($v.functions.covered)/\($v.functions.total), \(($v.functions.pct // 0))%"
              + " | \($v.statements.covered)/\($v.statements.total), \(($v.statements.pct // 0))% |"
          ' "$COV_JSON"
          echo
        } > "$OUT_MD"