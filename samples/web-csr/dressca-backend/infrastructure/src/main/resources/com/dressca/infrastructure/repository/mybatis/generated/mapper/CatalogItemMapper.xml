<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dressca.infrastructure.repository.mybatis.generated.mapper.CatalogItemMapper">
  <resultMap id="BaseResultMap" type="com.dressca.infrastructure.repository.mybatis.generated.entity.CatalogItemEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="price" jdbcType="NUMERIC" property="price" />
    <result column="product_code" jdbcType="VARCHAR" property="productCode" />
    <result column="catalog_category_id" jdbcType="BIGINT" property="catalogCategoryId" />
    <result column="catalog_brand_id" jdbcType="BIGINT" property="catalogBrandId" />
    <result column="row_version" jdbcType="TIMESTAMP" property="rowVersion" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, name, description, price, product_code, catalog_category_id, catalog_brand_id, 
    row_version
  </sql>
  <select id="selectByExample" parameterType="com.dressca.infrastructure.repository.mybatis.generated.entity.CatalogItemEntityExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from catalog_items
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from catalog_items
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from catalog_items
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.dressca.infrastructure.repository.mybatis.generated.entity.CatalogItemEntityExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from catalog_items
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.dressca.infrastructure.repository.mybatis.generated.entity.CatalogItemEntity" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into catalog_items (name, description, price, 
      product_code, catalog_category_id, catalog_brand_id, 
      row_version)
    values (#{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{price,jdbcType=NUMERIC}, 
      #{productCode,jdbcType=VARCHAR}, #{catalogCategoryId,jdbcType=BIGINT}, #{catalogBrandId,jdbcType=BIGINT}, 
      #{rowVersion,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.dressca.infrastructure.repository.mybatis.generated.entity.CatalogItemEntity" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into catalog_items
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="productCode != null">
        product_code,
      </if>
      <if test="catalogCategoryId != null">
        catalog_category_id,
      </if>
      <if test="catalogBrandId != null">
        catalog_brand_id,
      </if>
      <if test="rowVersion != null">
        row_version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=NUMERIC},
      </if>
      <if test="productCode != null">
        #{productCode,jdbcType=VARCHAR},
      </if>
      <if test="catalogCategoryId != null">
        #{catalogCategoryId,jdbcType=BIGINT},
      </if>
      <if test="catalogBrandId != null">
        #{catalogBrandId,jdbcType=BIGINT},
      </if>
      <if test="rowVersion != null">
        #{rowVersion,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dressca.infrastructure.repository.mybatis.generated.entity.CatalogItemEntityExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from catalog_items
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update catalog_items
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.name != null">
        name = #{row.name,jdbcType=VARCHAR},
      </if>
      <if test="row.description != null">
        description = #{row.description,jdbcType=VARCHAR},
      </if>
      <if test="row.price != null">
        price = #{row.price,jdbcType=NUMERIC},
      </if>
      <if test="row.productCode != null">
        product_code = #{row.productCode,jdbcType=VARCHAR},
      </if>
      <if test="row.catalogCategoryId != null">
        catalog_category_id = #{row.catalogCategoryId,jdbcType=BIGINT},
      </if>
      <if test="row.catalogBrandId != null">
        catalog_brand_id = #{row.catalogBrandId,jdbcType=BIGINT},
      </if>
      <if test="row.rowVersion != null">
        row_version = CURRENT_TIMESTAMP,
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update catalog_items
    set id = #{row.id,jdbcType=BIGINT},
      name = #{row.name,jdbcType=VARCHAR},
      description = #{row.description,jdbcType=VARCHAR},
      price = #{row.price,jdbcType=NUMERIC},
      product_code = #{row.productCode,jdbcType=VARCHAR},
      catalog_category_id = #{row.catalogCategoryId,jdbcType=BIGINT},
      catalog_brand_id = #{row.catalogBrandId,jdbcType=BIGINT},
      row_version = CURRENT_TIMESTAMP
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dressca.infrastructure.repository.mybatis.generated.entity.CatalogItemEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update catalog_items
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=NUMERIC},
      </if>
      <if test="productCode != null">
        product_code = #{productCode,jdbcType=VARCHAR},
      </if>
      <if test="catalogCategoryId != null">
        catalog_category_id = #{catalogCategoryId,jdbcType=BIGINT},
      </if>
      <if test="catalogBrandId != null">
        catalog_brand_id = #{catalogBrandId,jdbcType=BIGINT},
      </if>
      <if test="rowVersion != null">
        row_version = CURRENT_TIMESTAMP,
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
      and row_version = #{rowVersion,jdbcType=TIMESTAMP}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dressca.infrastructure.repository.mybatis.generated.entity.CatalogItemEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update catalog_items
    set name = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      price = #{price,jdbcType=NUMERIC},
      product_code = #{productCode,jdbcType=VARCHAR},
      catalog_category_id = #{catalogCategoryId,jdbcType=BIGINT},
      catalog_brand_id = #{catalogBrandId,jdbcType=BIGINT},
      row_version = CURRENT_TIMESTAMP
    where id = #{id,jdbcType=BIGINT}
      and row_version = #{rowVersion,jdbcType=TIMESTAMP}
  </update>
</mapper>