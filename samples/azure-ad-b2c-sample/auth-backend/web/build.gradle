plugins {
	id 'java'
	id 'org.springframework.boot' version "${springBootVersion}"
	id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
	id 'org.springdoc.openapi-gradle-plugin' version "${springdocOpenapiGradlePluginVersion}"
}

group = 'com.dressca'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation supportDependencies.spring_boot_starter_web
	implementation supportDependencies.spring_boot_starter_validation
	implementation supportDependencies.spring_boot_starter_actuator
	implementation supportDependencies.springdoc_openapi_starter_webmvc_ui
	implementation supportDependencies.mybatis_spring_boot_starter
	implementation supportDependencies.commons_lang3
	implementation supportDependencies.auth0_jwt
	implementation supportDependencies.jackson_databind
	implementation supportDependencies.spring_cloud_azure_starter
	implementation supportDependencies.spring_cloud_azure_starter_ad_b2c
	
	implementation project(':application-core')
	implementation project(':infrastructure')
	implementation project(':system-common')

	testImplementation supportDependencies.spring_boot_starter_test
	testImplementation supportDependencies.spring_boot_starter_log4j2

	compileOnly supportDependencies.servlet_api
}

dependencyManagement {
	imports {
		mavenBom supportDependencies.spring_cloud_azure_dependencies
	}
}

configurations {
	all {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
}
afterEvaluate {
    tasks.named("forkedSpringBootRun") {
		workingDir("$rootDir/api-docs")
	}
}
openApi {
    apiDocsUrl.set("http://localhost:8080/api-docs")
    outputDir.set(file("$rootDir/api-docs"))
    outputFileName.set("api-specification.json")
}
tasks.named('test') {
	useJUnitPlatform()
}

build.dependsOn("generateOpenApiDocs")