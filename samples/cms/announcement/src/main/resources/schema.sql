DROP TABLE IF EXISTS ANNOUNCEMENT CASCADE;
CREATE TABLE ANNOUNCEMENT
(
  ID UUID NOT NULL PRIMARY KEY,
  CATEGORY NVARCHAR(128) NOT NULL,
  POST_DATE_TIME TIMESTAMP WITH TIME ZONE NOT NULL,
  EXPIRE_DATE_TIME TIMESTAMP WITH TIME ZONE,
  DISPLAY_PRIORITY INT NOT NULL,
  CREATED_AT TIMESTAMP WITH TIME ZONE NOT NULL,
  CHANGED_AT TIMESTAMP WITH TIME ZONE NOT NULL,
  IS_DELETED BOOLEAN NOT NULL
);

DROP TABLE IF EXISTS ANNOUNCEMENT_CONTENT CASCADE;
CREATE TABLE ANNOUNCEMENT_CONTENT
(
  ID UUID NOT NULL PRIMARY KEY,
  ANNOUNCEMENT_ID UUID NOT NULL,
  LANGUAGE_CODE NVARCHAR(8) NOT NULL,
  TITLE NVARCHAR(256) NOT NULL,
  MESSAGE NVARCHAR(512) NOT NULL,
  LINK_URL NVARCHAR(1024),
  CONSTRAINT FK_ANNOUNCEMENT_CONTENT_ANNOUNCEMENT FOREIGN KEY (ANNOUNCEMENT_ID) REFERENCES ANNOUNCEMENT(ID) ON DELETE CASCADE
);

DROP TABLE IF EXISTS ANNOUNCEMENT_HISTORY CASCADE;
CREATE TABLE ANNOUNCEMENT_HISTORY
(
  ID UUID NOT NULL PRIMARY KEY,
  ANNOUNCEMENT_ID UUID NOT NULL,
  CATEGORY NVARCHAR(128) NOT NULL,
  POST_DATE_TIME TIMESTAMP WITH TIME ZONE NOT NULL,
  EXPIRE_DATE_TIME TIMESTAMP WITH TIME ZONE,
  DISPLAY_PRIORITY INT NOT NULL,
  CREATED_AT TIMESTAMP WITH TIME ZONE NOT NULL,
  CHANGED_BY NVARCHAR(256) NOT NULL,
  OPERATION_TYPE INT NOT NULL,
  CONSTRAINT FK_ANNOUNCEMENT_HISTORY_ANNOUNCEMENT FOREIGN KEY (ANNOUNCEMENT_ID) REFERENCES ANNOUNCEMENT(ID) ON DELETE CASCADE
);

DROP TABLE IF EXISTS ANNOUNCEMENT_CONTENT_HISTORY CASCADE;
CREATE TABLE ANNOUNCEMENT_CONTENT_HISTORY
(
  ID UUID NOT NULL PRIMARY KEY,
  ANNOUNCEMENT_HISTORY_ID UUID NOT NULL,
  LANGUAGE_CODE NVARCHAR(8) NOT NULL,
  TITLE NVARCHAR(256) NOT NULL,
  MESSAGE NVARCHAR(512) NOT NULL,
  LINK_URL NVARCHAR(1024),
  CONSTRAINT FK_ANNOUNCEMENT_CONTENT_HISTORY_ANNOUNCEMENT_HISTORY FOREIGN KEY (ANNOUNCEMENT_HISTORY_ID) REFERENCES ANNOUNCEMENT_HISTORY(ID) ON DELETE CASCADE
);