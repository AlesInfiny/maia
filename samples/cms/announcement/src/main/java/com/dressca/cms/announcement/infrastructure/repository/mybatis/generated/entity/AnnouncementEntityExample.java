package com.dressca.cms.announcement.infrastructure.repository.mybatis.generated.entity;

import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

public class AnnouncementEntityExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table announcement
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table announcement
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table announcement
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table announcement
     *
     * @mbg.generated
     */
    public AnnouncementEntityExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table announcement
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table announcement
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table announcement
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table announcement
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table announcement
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table announcement
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table announcement
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table announcement
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table announcement
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table announcement
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table announcement
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> idCriteria;

        protected List<Criterion> allCriteria;

        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
            idCriteria = new ArrayList<>();
        }

        public List<Criterion> getIdCriteria() {
            return idCriteria;
        }

        protected void addIdCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            idCriteria.add(new Criterion(condition, value, "com.dressca.cms.announcement.infrastructure.repository.mybatis.handler.UuidTypeHandler"));
            allCriteria = null;
        }

        protected void addIdCriterion(String condition, UUID value1, UUID value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            idCriteria.add(new Criterion(condition, value1, value2, "com.dressca.cms.announcement.infrastructure.repository.mybatis.handler.UuidTypeHandler"));
            allCriteria = null;
        }

        public boolean isValid() {
            return criteria.size() > 0
                || idCriteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            if (allCriteria == null) {
                allCriteria = new ArrayList<>();
                allCriteria.addAll(criteria);
                allCriteria.addAll(idCriteria);
            }
            return allCriteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
            allCriteria = null;
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
            allCriteria = null;
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
            allCriteria = null;
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(UUID value) {
            addIdCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(UUID value) {
            addIdCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(UUID value) {
            addIdCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(UUID value) {
            addIdCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(UUID value) {
            addIdCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(UUID value) {
            addIdCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<UUID> values) {
            addIdCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<UUID> values) {
            addIdCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(UUID value1, UUID value2) {
            addIdCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(UUID value1, UUID value2) {
            addIdCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andCategoryIsNull() {
            addCriterion("category is null");
            return (Criteria) this;
        }

        public Criteria andCategoryIsNotNull() {
            addCriterion("category is not null");
            return (Criteria) this;
        }

        public Criteria andCategoryEqualTo(String value) {
            addCriterion("category =", value, "category");
            return (Criteria) this;
        }

        public Criteria andCategoryNotEqualTo(String value) {
            addCriterion("category <>", value, "category");
            return (Criteria) this;
        }

        public Criteria andCategoryGreaterThan(String value) {
            addCriterion("category >", value, "category");
            return (Criteria) this;
        }

        public Criteria andCategoryGreaterThanOrEqualTo(String value) {
            addCriterion("category >=", value, "category");
            return (Criteria) this;
        }

        public Criteria andCategoryLessThan(String value) {
            addCriterion("category <", value, "category");
            return (Criteria) this;
        }

        public Criteria andCategoryLessThanOrEqualTo(String value) {
            addCriterion("category <=", value, "category");
            return (Criteria) this;
        }

        public Criteria andCategoryLike(String value) {
            addCriterion("category like", value, "category");
            return (Criteria) this;
        }

        public Criteria andCategoryNotLike(String value) {
            addCriterion("category not like", value, "category");
            return (Criteria) this;
        }

        public Criteria andCategoryIn(List<String> values) {
            addCriterion("category in", values, "category");
            return (Criteria) this;
        }

        public Criteria andCategoryNotIn(List<String> values) {
            addCriterion("category not in", values, "category");
            return (Criteria) this;
        }

        public Criteria andCategoryBetween(String value1, String value2) {
            addCriterion("category between", value1, value2, "category");
            return (Criteria) this;
        }

        public Criteria andCategoryNotBetween(String value1, String value2) {
            addCriterion("category not between", value1, value2, "category");
            return (Criteria) this;
        }

        public Criteria andPostDateTimeIsNull() {
            addCriterion("post_date_time is null");
            return (Criteria) this;
        }

        public Criteria andPostDateTimeIsNotNull() {
            addCriterion("post_date_time is not null");
            return (Criteria) this;
        }

        public Criteria andPostDateTimeEqualTo(OffsetDateTime value) {
            addCriterion("post_date_time =", value, "postDateTime");
            return (Criteria) this;
        }

        public Criteria andPostDateTimeNotEqualTo(OffsetDateTime value) {
            addCriterion("post_date_time <>", value, "postDateTime");
            return (Criteria) this;
        }

        public Criteria andPostDateTimeGreaterThan(OffsetDateTime value) {
            addCriterion("post_date_time >", value, "postDateTime");
            return (Criteria) this;
        }

        public Criteria andPostDateTimeGreaterThanOrEqualTo(OffsetDateTime value) {
            addCriterion("post_date_time >=", value, "postDateTime");
            return (Criteria) this;
        }

        public Criteria andPostDateTimeLessThan(OffsetDateTime value) {
            addCriterion("post_date_time <", value, "postDateTime");
            return (Criteria) this;
        }

        public Criteria andPostDateTimeLessThanOrEqualTo(OffsetDateTime value) {
            addCriterion("post_date_time <=", value, "postDateTime");
            return (Criteria) this;
        }

        public Criteria andPostDateTimeIn(List<OffsetDateTime> values) {
            addCriterion("post_date_time in", values, "postDateTime");
            return (Criteria) this;
        }

        public Criteria andPostDateTimeNotIn(List<OffsetDateTime> values) {
            addCriterion("post_date_time not in", values, "postDateTime");
            return (Criteria) this;
        }

        public Criteria andPostDateTimeBetween(OffsetDateTime value1, OffsetDateTime value2) {
            addCriterion("post_date_time between", value1, value2, "postDateTime");
            return (Criteria) this;
        }

        public Criteria andPostDateTimeNotBetween(OffsetDateTime value1, OffsetDateTime value2) {
            addCriterion("post_date_time not between", value1, value2, "postDateTime");
            return (Criteria) this;
        }

        public Criteria andExpireDateTimeIsNull() {
            addCriterion("expire_date_time is null");
            return (Criteria) this;
        }

        public Criteria andExpireDateTimeIsNotNull() {
            addCriterion("expire_date_time is not null");
            return (Criteria) this;
        }

        public Criteria andExpireDateTimeEqualTo(OffsetDateTime value) {
            addCriterion("expire_date_time =", value, "expireDateTime");
            return (Criteria) this;
        }

        public Criteria andExpireDateTimeNotEqualTo(OffsetDateTime value) {
            addCriterion("expire_date_time <>", value, "expireDateTime");
            return (Criteria) this;
        }

        public Criteria andExpireDateTimeGreaterThan(OffsetDateTime value) {
            addCriterion("expire_date_time >", value, "expireDateTime");
            return (Criteria) this;
        }

        public Criteria andExpireDateTimeGreaterThanOrEqualTo(OffsetDateTime value) {
            addCriterion("expire_date_time >=", value, "expireDateTime");
            return (Criteria) this;
        }

        public Criteria andExpireDateTimeLessThan(OffsetDateTime value) {
            addCriterion("expire_date_time <", value, "expireDateTime");
            return (Criteria) this;
        }

        public Criteria andExpireDateTimeLessThanOrEqualTo(OffsetDateTime value) {
            addCriterion("expire_date_time <=", value, "expireDateTime");
            return (Criteria) this;
        }

        public Criteria andExpireDateTimeIn(List<OffsetDateTime> values) {
            addCriterion("expire_date_time in", values, "expireDateTime");
            return (Criteria) this;
        }

        public Criteria andExpireDateTimeNotIn(List<OffsetDateTime> values) {
            addCriterion("expire_date_time not in", values, "expireDateTime");
            return (Criteria) this;
        }

        public Criteria andExpireDateTimeBetween(OffsetDateTime value1, OffsetDateTime value2) {
            addCriterion("expire_date_time between", value1, value2, "expireDateTime");
            return (Criteria) this;
        }

        public Criteria andExpireDateTimeNotBetween(OffsetDateTime value1, OffsetDateTime value2) {
            addCriterion("expire_date_time not between", value1, value2, "expireDateTime");
            return (Criteria) this;
        }

        public Criteria andDisplayPriorityIsNull() {
            addCriterion("display_priority is null");
            return (Criteria) this;
        }

        public Criteria andDisplayPriorityIsNotNull() {
            addCriterion("display_priority is not null");
            return (Criteria) this;
        }

        public Criteria andDisplayPriorityEqualTo(Integer value) {
            addCriterion("display_priority =", value, "displayPriority");
            return (Criteria) this;
        }

        public Criteria andDisplayPriorityNotEqualTo(Integer value) {
            addCriterion("display_priority <>", value, "displayPriority");
            return (Criteria) this;
        }

        public Criteria andDisplayPriorityGreaterThan(Integer value) {
            addCriterion("display_priority >", value, "displayPriority");
            return (Criteria) this;
        }

        public Criteria andDisplayPriorityGreaterThanOrEqualTo(Integer value) {
            addCriterion("display_priority >=", value, "displayPriority");
            return (Criteria) this;
        }

        public Criteria andDisplayPriorityLessThan(Integer value) {
            addCriterion("display_priority <", value, "displayPriority");
            return (Criteria) this;
        }

        public Criteria andDisplayPriorityLessThanOrEqualTo(Integer value) {
            addCriterion("display_priority <=", value, "displayPriority");
            return (Criteria) this;
        }

        public Criteria andDisplayPriorityIn(List<Integer> values) {
            addCriterion("display_priority in", values, "displayPriority");
            return (Criteria) this;
        }

        public Criteria andDisplayPriorityNotIn(List<Integer> values) {
            addCriterion("display_priority not in", values, "displayPriority");
            return (Criteria) this;
        }

        public Criteria andDisplayPriorityBetween(Integer value1, Integer value2) {
            addCriterion("display_priority between", value1, value2, "displayPriority");
            return (Criteria) this;
        }

        public Criteria andDisplayPriorityNotBetween(Integer value1, Integer value2) {
            addCriterion("display_priority not between", value1, value2, "displayPriority");
            return (Criteria) this;
        }

        public Criteria andCreatedAtIsNull() {
            addCriterion("created_at is null");
            return (Criteria) this;
        }

        public Criteria andCreatedAtIsNotNull() {
            addCriterion("created_at is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedAtEqualTo(OffsetDateTime value) {
            addCriterion("created_at =", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtNotEqualTo(OffsetDateTime value) {
            addCriterion("created_at <>", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtGreaterThan(OffsetDateTime value) {
            addCriterion("created_at >", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtGreaterThanOrEqualTo(OffsetDateTime value) {
            addCriterion("created_at >=", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtLessThan(OffsetDateTime value) {
            addCriterion("created_at <", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtLessThanOrEqualTo(OffsetDateTime value) {
            addCriterion("created_at <=", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtIn(List<OffsetDateTime> values) {
            addCriterion("created_at in", values, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtNotIn(List<OffsetDateTime> values) {
            addCriterion("created_at not in", values, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtBetween(OffsetDateTime value1, OffsetDateTime value2) {
            addCriterion("created_at between", value1, value2, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtNotBetween(OffsetDateTime value1, OffsetDateTime value2) {
            addCriterion("created_at not between", value1, value2, "createdAt");
            return (Criteria) this;
        }

        public Criteria andChangedAtIsNull() {
            addCriterion("changed_at is null");
            return (Criteria) this;
        }

        public Criteria andChangedAtIsNotNull() {
            addCriterion("changed_at is not null");
            return (Criteria) this;
        }

        public Criteria andChangedAtEqualTo(OffsetDateTime value) {
            addCriterion("changed_at =", value, "changedAt");
            return (Criteria) this;
        }

        public Criteria andChangedAtNotEqualTo(OffsetDateTime value) {
            addCriterion("changed_at <>", value, "changedAt");
            return (Criteria) this;
        }

        public Criteria andChangedAtGreaterThan(OffsetDateTime value) {
            addCriterion("changed_at >", value, "changedAt");
            return (Criteria) this;
        }

        public Criteria andChangedAtGreaterThanOrEqualTo(OffsetDateTime value) {
            addCriterion("changed_at >=", value, "changedAt");
            return (Criteria) this;
        }

        public Criteria andChangedAtLessThan(OffsetDateTime value) {
            addCriterion("changed_at <", value, "changedAt");
            return (Criteria) this;
        }

        public Criteria andChangedAtLessThanOrEqualTo(OffsetDateTime value) {
            addCriterion("changed_at <=", value, "changedAt");
            return (Criteria) this;
        }

        public Criteria andChangedAtIn(List<OffsetDateTime> values) {
            addCriterion("changed_at in", values, "changedAt");
            return (Criteria) this;
        }

        public Criteria andChangedAtNotIn(List<OffsetDateTime> values) {
            addCriterion("changed_at not in", values, "changedAt");
            return (Criteria) this;
        }

        public Criteria andChangedAtBetween(OffsetDateTime value1, OffsetDateTime value2) {
            addCriterion("changed_at between", value1, value2, "changedAt");
            return (Criteria) this;
        }

        public Criteria andChangedAtNotBetween(OffsetDateTime value1, OffsetDateTime value2) {
            addCriterion("changed_at not between", value1, value2, "changedAt");
            return (Criteria) this;
        }

        public Criteria andIsDeletedIsNull() {
            addCriterion("is_deleted is null");
            return (Criteria) this;
        }

        public Criteria andIsDeletedIsNotNull() {
            addCriterion("is_deleted is not null");
            return (Criteria) this;
        }

        public Criteria andIsDeletedEqualTo(Boolean value) {
            addCriterion("is_deleted =", value, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andIsDeletedNotEqualTo(Boolean value) {
            addCriterion("is_deleted <>", value, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andIsDeletedGreaterThan(Boolean value) {
            addCriterion("is_deleted >", value, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andIsDeletedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("is_deleted >=", value, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andIsDeletedLessThan(Boolean value) {
            addCriterion("is_deleted <", value, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andIsDeletedLessThanOrEqualTo(Boolean value) {
            addCriterion("is_deleted <=", value, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andIsDeletedIn(List<Boolean> values) {
            addCriterion("is_deleted in", values, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andIsDeletedNotIn(List<Boolean> values) {
            addCriterion("is_deleted not in", values, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andIsDeletedBetween(Boolean value1, Boolean value2) {
            addCriterion("is_deleted between", value1, value2, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andIsDeletedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("is_deleted not between", value1, value2, "isDeleted");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table announcement
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table announcement
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}